- name: Update packages  
  apt:
    upgrade: 'True'
    update_cache: 'True'

- name: Install required packages
  apt:
    name: "{{ item }}"
    state: present
  loop: "{{ packages_db }}"

- name: Make sure pymysql is present
  pip:
    name: pymysql
    state: present

- name: Find the private ip for db config change
  set_fact:
    db_private_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"

- name: Print private ip
  debug:
    msg: "{{ db_private_ip }}"
- name: Set the bind port to private ip
  shell: |
    sed -i "s/127.0.0.1/{{ PRIVATE_IP }}/g" {{ CONFIG_FILE }}
  vars:
    PRIVATE_IP: "{{ db_private_ip }}"
    CONFIG_FILE: "{{ mysql_config_file }}"

- name: restart msql service
  systemd: name=mysql state=restarted

# - name: Set azure creds
#   set_fact:
#     TENANT_ID: '{{ lookup('env', 'TF_VAR_TENANT_ID') }}'
#     CLIENT_ID: '{{ lookup('env', 'TF_VAR_CLIENT_ID') }}'
#     CLIENT_SECRET: '{{ lookup('env', 'TF_VAR_CLIENT_SECRET') }}'

# - name: Get Key Vault by name
#   azure_rm_keyvault_info:
#     resource_group: ansible-kv-test-rg
#     name: "{{ vault_name }}"
#   register: keyvault
#   vars:
#     tenant_id: <tenantId>
#     vault_name: <vaultName>
#     secret_name: adminPassword
#     client_id: <servicePrincipalApplicationId>
#     client_secret: <servicePrincipalSecret>

- name: Create database user
  shell: |
    sudo mysql -u root -e "CREATE USER {{ USER }} IDENTIFIED BY {{ PASSWORD }}"
  vars:
    USER: "{{ db_user }}"
    PASSWORD: "{{ db_user_passowrd }}"

- name: Create database
  shell: |
    sudo mysql -u root -e "CREATE DATABASE {{ DB_NAME }}"
  vars:
    DB_NAME: "{{ db_name }}"

- name: Create new user for new database
  shell: |
    sudo mysql -u root -e "GRANT ALL ON {{ DB_NAME }}.* TO {{ USER }}"
  vars:
    DB_NAME: "{{ db_name }}"
    USER: "{{ db_user }}"
